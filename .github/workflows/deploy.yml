name: Laravel CI
on: [push]
#on:
#  push:
#    branches: [ master ]
#  # pull_request:
#  #   branches: [ master ]
jobs:
  Explore-GitHub-Actions:
    runs-on: ubuntu-latest
    steps:
      - run: echo "🎉 The job was automatically triggered by a ${{ github.event_name }} event."
      - run: echo "🐧 This job is now running on a ${{ runner.os }} server hosted by GitHub!"
      - run: echo "🔎 The name of your branch is ${{ github.ref }} and your repository is ${{ github.repository }}."
      - name: Check out repository code
        uses: actions/checkout@v3
      - run: echo "💡 The ${{ github.repository }} repository has been cloned to the runner."
      - run: echo "🖥️ The workflow is now ready to test your code on the runner."
      - name: List files in the repository
        run: |
          ls ${{ github.workspace }}
      - run: echo "🍏 This job's status is ${{ job.status }}."

#name: Laravel CI
#
#on:
#  push:
#    branches: [ master ]
#  # pull_request:
#  #   branches: [ master ]
#
#jobs:
#  laravel-tests:
#
#    runs-on: ubuntu-latest
#
#    steps:
#      - uses: shivammathur/setup-php@15c43e89cdef867065b0213be354c2841860869e
#        with:
#          php-version: '7.4'
#      - uses: actions/checkout@v3
#      - name: Copy .env
#        run: php -r "file_exists('.env') || copy('.env.example', '.env');"
#      - name: Install Dependencies
#        run: composer install -q --no-ansi --no-interaction --no-scripts --no-progress --prefer-dist
#      - name: Generate key
#        run: php artisan key:generate
#      - name: Directory Permissions
#        run: chmod -R 777 storage bootstrap/cache
#      - name: Create Database
#        run: |
#          mkdir -p database
#          touch database/database.sqlite
#      - name: Execute tests (Unit and Feature tests) via PHPUnit
#        env:
#          DB_CONNECTION: sqlite
#          DB_DATABASE: database/database.sqlite
#        run: vendor/bin/phpunit
#
##  deploy:
##    name: deploy
##    runs-on: ubuntu-latest
##    needs: laravel-tests
##    if: success()
##    steps:
##      - name: ssh connction
##        uses: appleboy/ssh-action@1a8b3784eaa665f677fa114edd5683bb6a6bfaa8
##        with:
##          host: ${{ secrets.REMOTE_HOST }}
##          username: ${{ secrets.REMOTE_USER }}
##          key: ${{ secrets.REMOTE_SSH_PRIVATE_KEY }}
##          port: ${{ secrets.REMOTE_PORT }}
##          script: |
##            cd ${{ secrets.REMOTE_TARGET }}
##            echo "---GIT---"
##            git pull origin master
##            git reset --hard origin/master
##            echo "---COMPOSER---"
##            composer install
##            composer update
##            composer dump-autoload
##            echo "---ARTISAN---"
##            php artisan optimize
##            php artisan config:clear
##            php artisan migrate:fresh --seed --force
##            mkdir ./public/api/ -p
##            php artisan route:list --sort=name > ./public/api/docs
